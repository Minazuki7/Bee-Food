# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Country {
  """country's _id"""
  id: ID!

  """country's name"""
  name: String!
}

type City {
  """city's _id"""
  id: ID!

  """city's name"""
  name: String!
}

type Zone {
  """Zone's _id"""
  id: ID!

  """Zone's  name"""
  name: String!

  """Zone Raduis in Km"""
  raduis: Int!
}

type Client {
  """client's _id"""
  id: ID!

  """client's email"""
  email: String!

  """client's First name"""
  firstName: String!

  """client's last name"""
  lastName: String!

  """client's phone number"""
  phone: String!
}

type Driver {
  """driver's _id"""
  id: ID!

  """driver's email"""
  email: String!

  """driver's First name"""
  firstName: String!

  """driver's last name"""
  lastName: String!

  """driver's phone number"""
  phone: String!
}

type Location {
  """longitude"""
  longitude: Float!

  """latitude"""
  latitude: Float!
}

type Franchise {
  """franchise's _id"""
  id: ID!

  """franchise's name"""
  name: String!

  """franchise's picture"""
  picture: String!

  """franchise's email"""
  email: String!

  """franchise's description"""
  description: String!
}

type Branch {
  """branch's _id"""
  id: ID!

  """branch's name"""
  name: String!

  """branch's picture"""
  picture: String!

  """branch's description"""
  description: String!

  """branch's opening hour"""
  openAt: String!

  """branch closing hour"""
  closeAt: String!

  """branch's status"""
  status: Boolean!
}

type Item {
  """item's _id"""
  id: ID!

  """item's title """
  title: String!

  """item's picture"""
  picture: String

  """item's description"""
  description: String!

  """item's slug"""
  slug: String!

  """item's status"""
  status: Boolean!

  """item's price"""
  price: Int!

  """food's type"""
  roles: [foodType!]!
}

enum foodType {
  food
  addon
}

type Menu {
  """menu's _id"""
  id: ID!

  """menu's name"""
  name: String!

  """menu's picture"""
  picture: String

  """menu's description"""
  description: String!

  """menu's price"""
  price: Int!

  """menu's status"""
  status: Boolean!
}

type Order {
  """order's _id"""
  id: ID!

  """order's price"""
  price: Int!

  """order's deliveryprice"""
  deliveryprice: Int!

  """order's deliveryFees"""
  deliveryFees: Int!

  """order's status"""
  status: [status!]!
}

enum status {
  sent
  confirmed
  canceled
  preparing
  ready
  delivery
  delivered
  rejected
}

type OrderDetail {
  """order's _id"""
  id: ID!

  """total order's price"""
  totalPrice: Int!

  """order's price"""
  originalPrice: Int!
}

type Stock {
  """stock's _id"""
  id: ID!

  """orginal value"""
  intial: Int!

  """remaning stock"""
  rest: Int!
}

type User {
  """user's _id"""
  id: ID!

  """user's email"""
  email: String!

  """user's First name"""
  firstName: String!

  """user's last name"""
  lastName: String!

  """user's password"""
  password: String!

  """user's phone number"""
  phone: Int!

  """user's roles"""
  roles: [Roles!]!
}

enum Roles {
  admin
  client
  driver
  owner
  manger
  worker
}

type RefreshToken {
  """Refresh token"""
  token: String!
  expires: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthResult {
  """JWT authorization token"""
  token: String!

  """JWT authorization refresh token"""
  refreshToken: String!

  """logged in user"""
  user: User!
  expiresIn: String!
}

type Query {
  users: [User!]!
  user(id: ID!): User!
  whoAmI: User!
  zones: [Zone!]!
  zone(id: Int!): Zone!
  locations: [Location!]!
  location(id: Int!): Location!
  clients: [Client!]!
  client(id: Int!): Client!
  drivers: [Driver!]!
  driver(id: Int!): Driver!
  franchises: [Franchise!]!
  franchise(id: Int!): Franchise!
  branches: [Branch!]!
  branch(id: String!): Branch!
  items: [Item!]!
  item(id: ID!): Item!
  menus: [Menu!]!
  menu(id: ID!): Menu!
  orders: [Order!]!
  order(id: ID!): Order!
  orderDetails: [OrderDetail!]!
  orderDetail(id: ID!): OrderDetail!
  stock(id: Int!): Stock!
  countries: [Country!]!
  country(id: ID!): Country!
  cites: [City!]!
  cite(id: ID!): City!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): User!
  login(
    """user's login email"""
    email: String!

    """user's login password"""
    password: String!
  ): AuthResult!
  refresh(refreshToken: String!): RefreshToken!
  createZone(createZoneInput: CreateZoneInput!): Zone!
  updateZone(updateZoneInput: UpdateZoneInput!): Zone!
  removeZone(id: Int!): Zone!
  createLocation(createLocationInput: CreateLocationInput!): Location!
  updateLocation(updateLocationInput: UpdateLocationInput!): Location!
  removeLocation(id: Int!): Location!
  createClient(createClientInput: CreateClientInput!): Client!
  updateClient(updateClientInput: UpdateClientInput!): Client!
  removeClient(id: Int!): Client!
  createDriver(createDriverInput: CreateDriverInput!): Driver!
  updateDriver(updateDriverInput: UpdateDriverInput!): Driver!
  removeDriver(id: Int!): Driver!
  createFranchise(createFranchiseInput: CreateFranchiseInput!): Franchise!
  updateFranchise(updateFranchiseInput: UpdateFranchiseInput!): Franchise!
  removeFranchise(id: Int!): Franchise!
  createBranch(createBranchInput: CreateBranchInput!): Branch!
  updateBranch(updateBranchInput: UpdateBranchInput!, id: String!): Branch!
  removeBranch(id: String!): Branch!
  createItem(createItemInput: CreateItemInput!): Item!
  updateItem(updateItemInput: UpdateItemInput!, id: String!): Item!
  removeItem(id: ID!): Item!
  createMenu(createMenuInput: CreateMenuInput!): Menu!
  updateMenu(updateMenuInput: UpdateMenuInput!, id: String!): Menu!
  removeMenu(id: ID!): Menu!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrder(updateOrderInput: UpdateOrderInput!, id: String!): Order!
  removeOrder(id: ID!): Order!
  createOrderDetail(createOrderDetailInput: CreateOrderDetailInput!): OrderDetail!
  updateOrderDetail(id: String!, updateOrderDetailInput: UpdateOrderDetailInput!): OrderDetail!
  removeOrderDetail(id: ID!): OrderDetail!
  createStock(createStockInput: CreateStockInput!): Stock!
  updateStock(updateStockInput: UpdateStockInput!): Stock!
  removeStock(id: Int!): Stock!
  createCountry(createCountryInput: CreateCountryInput!): Country!
  updateCountry(updateCountryInput: UpdateCountryInput!, id: String!): Country!
  removeCountry(id: ID!): Country!
  createCity(createCityInput: CreateCityInput!): City!
  updateCity(updateCityInput: UpdateCityInput!, id: String!): City!
  removeCity(id: ID!): City!
}

input CreateUserInput {
  """user's email"""
  email: String!

  """user's name"""
  firstName: String!

  """user's last name"""
  lastName: String!

  """user's password"""
  password: String!

  """user's phone number"""
  phone: Int!

  """user's roles"""
  roles: [Roles!]!
}

input UpdateUserInput {
  """user's email"""
  email: String

  """user's name"""
  firstName: String

  """user's last name"""
  lastName: String

  """user's password"""
  password: String

  """user's phone number"""
  phone: Int

  """user's roles"""
  roles: [Roles!]

  """user's id"""
  id: String!
}

input CreateZoneInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateZoneInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateLocationInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateLocationInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateClientInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateClientInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateDriverInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateDriverInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateFranchiseInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateFranchiseInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateBranchInput {
  """branch's name"""
  name: String!

  """branch's franchise"""
  franchise: ID!

  """branch's picture"""
  picture: String

  """branch's description"""
  description: String!

  """branch's opening hour"""
  openAt: String!

  """branch closing hour"""
  closeAt: String!

  """branch's status"""
  status: Boolean!
}

input UpdateBranchInput {
  """branch's name"""
  name: String

  """branch's franchise"""
  franchise: ID

  """branch's picture"""
  picture: String

  """branch's description"""
  description: String

  """branch's opening hour"""
  openAt: String

  """branch closing hour"""
  closeAt: String

  """branch's status"""
  status: Boolean
}

input CreateItemInput {
  """branch's id"""
  branch: ID!

  """item's title """
  title: String!

  """item's picture"""
  picture: String

  """item's description"""
  description: String!

  """item's slug"""
  slug: String!

  """item's status"""
  status: Boolean!

  """item's price"""
  price: Int!

  """food's type"""
  foodType: [foodType!]!
}

input UpdateItemInput {
  """branch's id"""
  branch: ID

  """item's title """
  title: String

  """item's picture"""
  picture: String

  """item's description"""
  description: String

  """item's slug"""
  slug: String

  """item's status"""
  status: Boolean

  """item's price"""
  price: Int

  """food's type"""
  foodType: [foodType!]
}

input CreateMenuInput {
  """items list"""
  items: ID!

  """menu's name"""
  name: String!

  """menu's picture"""
  picture: String

  """menu's description"""
  description: String!

  """menu's price"""
  price: Int!

  """menu's status"""
  status: Boolean!
}

input UpdateMenuInput {
  """items list"""
  items: ID

  """menu's name"""
  name: String

  """menu's picture"""
  picture: String

  """menu's description"""
  description: String

  """menu's price"""
  price: Int

  """menu's status"""
  status: Boolean
}

input CreateOrderInput {
  """zone's id"""
  zone: ID!

  """client's id"""
  client: ID!

  """driver's id"""
  driver: ID!

  """order's price"""
  price: Int!

  """order's deliveryprice"""
  deliveryprice: Int!

  """order's deliveryFees"""
  deliveryFees: Int!

  """user's roles"""
  status: [status!]!
}

input UpdateOrderInput {
  """zone's id"""
  zone: ID

  """client's id"""
  client: ID

  """driver's id"""
  driver: ID

  """order's price"""
  price: Int

  """order's deliveryprice"""
  deliveryprice: Int

  """order's deliveryFees"""
  deliveryFees: Int

  """user's roles"""
  status: [status!]
}

input CreateOrderDetailInput {
  """order's id"""
  order: ID!

  """branch's id"""
  branch: ID!

  """items list"""
  items: ID

  """menus list"""
  menus: ID

  """total order's price"""
  totalPrice: Int!

  """order's price"""
  originalPrice: Int!
}

input UpdateOrderDetailInput {
  """order's id"""
  order: ID

  """branch's id"""
  branch: ID

  """items list"""
  items: ID

  """menus list"""
  menus: ID

  """total order's price"""
  totalPrice: Int

  """order's price"""
  originalPrice: Int
}

input CreateStockInput {
  """item's id"""
  item: ID!

  """orginal value"""
  intial: Int!
}

input UpdateStockInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCountryInput {
  """country's  name"""
  name: String!
}

input UpdateCountryInput {
  """country's  name"""
  name: String
}

input CreateCityInput {
  """city's  name"""
  name: String!

  """country's id"""
  country: ID!
}

input UpdateCityInput {
  """city's  name"""
  name: String

  """country's id"""
  country: ID
}